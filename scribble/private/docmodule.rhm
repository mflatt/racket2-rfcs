#lang rhombus/and_meta

import:
  lib("scribble/manual.rkt") expose:
    defmodule racketmodname
  "rhombus.rhm" open
  meta:
    lib("racket/base.rkt")
  meta_label:
    rhombus expose:
      import

export:
  docmodule
  rhombusmodname

meta:
  fun translate_mod(mod):
    match mod
    | '$(a :: Id)': Syntax.unwrap(a)
    | '$a / $b ...':
        base.#{string->symbol}(Syntax.unwrap(a)
                                 +& "/"
                                 +& translate_mod('$b ...'))
    | 'lib($str)':
        [#'lib, str]

  syntax.class Option:
    kind: ~term
    pattern
    | '~lang':
        field form: '~lang'
    | '~no_declare':
        field form: '#{#:no-declare}'

decl.macro 'docmodule ($(option :: Option), ..., $mod ...)':
  '$(parsed(['defmodule',
             #'#{#:require-form},
             unparsed('fun (mod): @rhombus(import: #,(mod))'),
             translate_mod('$mod ...'),
             option.form, ...]))'
  
expr.macro 'rhombusmodname ($mod ...) $tail ...':
  values(parsed(['racketmodname', translate_mod('$mod ...')]),
         '$tail ...')
