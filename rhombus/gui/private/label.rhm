#lang rhombus/static/and_meta
import:
  lib("racket/gui/easy.rkt")
  lib("racket/gui.rkt") as racket
  rhombus/draw:
    expose:
      Color
      Font
  rhombus/draw/private/font!private._Font
  rhombus/draw/private/symbol_map.symbol_map_annot
  "view.rhm".View
  "obs.rhm":
    expose:
      Obs
      MaybeObs
  "type.rhm":
    expose:
      LabelString
      PositionInteger
      Size
      Stretch

export:
  Label

class Label(hand, private _at_label :: Obs):
  implements View
  internal _Label
  opaque
  override property handle: hand

  constructor (label :: MaybeObs.of(LabelString),
               ~color : color :: MaybeObs.of(maybe(Color)) = #false,
               ~font : font :: Font = normal_control_font):
    def at_label = obs.to_obs(label)
    super(easy.text(obs.unwrap(at_label),
                    ~color: obs.unwrap(color),
                    ~font: obs.unwrap_convert(font, fun(fnt): fnt && Font.handle(fnt))),
          at_label)

  property at_label :: Obs:
    _at_label.map(values)

  export:
    normal_control_font
    small_control_font
    tiny_control_font
    view_control_font

def normal_control_font = _Font(racket.#{normal-control-font})
def small_control_font = _Font(racket.#{small-control-font})
def tiny_control_font = _Font(racket.#{tiny-control-font})
def vie_control_font = _Font(racket.#{view-control-font})
