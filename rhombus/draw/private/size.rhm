#lang rhombus/static/and_meta
import:
  "dotting.rhm"

export:
  Size
  SizeLike

class Size(width :: NonnegReal, height :: NonnegReal):
  export:
    zero

def zero = Size(0, 0)

dotting.annot_macro 'SizeLike' ('to_size' => 'SizeLike.to_size'):
  'Size
     || matching([_ :: NonnegReal, _ :: NonnegReal])
     || matching({#'width: _ :: NonnegReal, #'height: _ :: NonnegReal})'

namespace SizeLike:
  export:
    to_size
  annot.macro 'to_size':
    'Size
       || converting(fun ([width :: NonnegReal, height :: NonnegReal]) :: Size: Size(width, height))
       || converting(fun ({#'width: width :: NonnegReal, #'height: height :: NonnegReal}) :: Size: Size(width, height))'
  fun to_size(s :: to_size described_as SizeLike):
    s
