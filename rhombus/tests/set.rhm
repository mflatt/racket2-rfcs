#lang rhombus
import: "check.rhm" open

check:
  Set.length({10, 20})
  2

// FIXME
#//
check:
  ~exn
  Set.length([1, 2, 3])
  values("contract violation", "expected: Set")

begin:
  use_static
  check:
    {1, 2}.length()
    2
  check:
    {"a", "b"}["a"]
    #true
  check:
    Set("a", "b").length()
    2
  check:
    MutableSet("a", "b").length()
    2
  check:
    def set = {1, 2}
    set.length()
    2
  check:
    def set :: Set = dynamic({"a", "b"})
    set.length()
    2
  check:
    def set -: Set = dynamic({"a", "b"})
    set.length()
    2
  check:
    def set :: Set.of(String) = dynamic({"a", "b"})
    set.length()
    2

begin:
  check:
    dynamic({"a", "b"}).length()
    2
  check:
    dynamic({"a", "b"})["a"]
    #true

// See also tests in "rest-args.rhm"
begin:
  check:
    {"a", "b", &{"c"}}
    {"a", "b", "c"}
  check:
    {"a", &{"b", "c"}}
    {"a", "b", "c"}
  check:
    {&{"b", "c"}, "a"}
    {"a", "b", "c"}
  check:
    {&{"b"}, "a", &{"c"}}
    {"a", "b", "c"}
  check:
    {"c", "b", &{"b"}, "a", &{"c"}}
    {"a", "b", "c"}
  check:
    {"b", &{"b"}, "c", "a", &{"c"}}
    {"a", "b", "c"}
  check:
    def mutable x = []
    [{&(begin: x := [1, x]; {"b"}), (begin: x:= [2, x]; "a"), &(begin: x:= [3, x]; {"c"})},
     x]
    [{"a", "b", "c"},
     [3, [2, [1, []]]]]
  check:
    ~exn
    Set{&"oops"}
    "not a set"
