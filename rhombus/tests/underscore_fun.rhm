#lang rhombus

check:
  (_ + _) ~is_a Function.of_arity(2)
  (! _) ~is_a Function.of_arity(1)
  List.cons(_, _) ~is_a Function.of_arity(2)
  List(_, _, _) ~is_a Function.of_arity(3)

check:
  let plus = (_ + _)
  plus(1, 2)
  ~is 3

check:
  let three = List(_, _, _)
  three(1, 2, 4)
  ~is [1, 2, 4]

check:
  [1, 2, 3] |> List.reverse ~is [3, 2, 1]
  100 |> (3 * _) ~is 300

check:
  [1, 2, 3, 4, 5, 6, 7, 8, 9]
    |> List.length
    |> math.sqrt
    |> to_string
  ~is "3"

check:
  [1, 2, 3].map((- _)) ~is [-1, -2, -3]
  (- _).map([1, 2, 3]) ~is [-1, -2, -3]
  [1, 2, 3] |> (- _).map(_) ~is [-1, -2, -3]

check:
  ~eval
  (_ . _)
  ~throws ".: expected an identifier for a field or method name"

check:
  use_static
  class Posn(x, y)
  fun get(n) :~ Posn: Posn(1, 2)
  (0 |> get).x
  ~is 1

check:
  class Posn(x, y)
  fun get(n, m) :~ Posn: Posn(1, 2)
  (0 |> get).x
  ~throws "arity mismatch"

check:
  ~eval
  use_static
  class Posn(x, y)
  fun get(n, m) :~ Posn: Posn(1, 2)
  (0 |> get).x
  ~throws values("wrong number of arguments",
                 "based on static information")
