#lang rhombus

import:
  scribble/rhombus open
  scribble/private/util
  lib("scribble/bnf.rkt")

export:
  BNF
  bseq balt boptional nonterm kleenestar kleeneplus boptional bgroup
  bis bor
  nonterm

def bis: @elem{@hspace(1)::=@hspace(1)}
def bor: @elem{@hspace(1) | @hspace(1)}

fun boptional(content, ...):
  [content, ..., @italic{?}]

fun bgroup(content, ...):
  [@elem{( }, content, ..., @elem{ )}]

fun nonterm(pre_content :: util.PreContent):
  bnf.nonterm(pre_content)

fun kleenestar(pre_content :: util.PreContent):
  bnf.nonterm(pre_content)

fun kleeneplus(pre_content :: util.PreContent):
  bnf.nonterm(pre_content)

fun bseq(c :: util.Content, ...):
  bnf.#{BNF-seq}(c, ...)

fun balt(e, ...):
  bnf.#{BNF-alt}(e, ...)

fun BNF([nt :: (util.Block || util.Content), clause :: (util.Block || util.Content), ...], ...):
  bnf.BNF(PairList[nt, clause, ...], ...)
